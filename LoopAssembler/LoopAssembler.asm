.686
.MODEL FLAT, c
.STACK
.DATA
arr      DD -43, 56, -29, 83, 100, -43, 32, 90, -47, 76, 84  ;             (1) Оголошення масиву чисел, кожне з яких займає слово
N            DD 11         ; (2) Кількість елементів в масиві arr
Sum          DD 0		 
Count        DD 0        
LB           DD -29      
RB           DD 83       
.CODE
sayHello PROC
lea EBX, arr               ; (3) Завантажуємо в BX адресу першого елемента масиву arr
	mov ECX, N	         ; (4) Завантажуємо в CX кількість елементів в масиві arr
	mov EAX, 0	         ; (5) В AX буде сума елементів масиву arr
	
G1:    
	mov EDX, LB          ; (6) Завантажуємо в DX  LB
	cmp [EBX], EDX       ; (7) Порівнюємо елемент масиву з лівою границею
	jle short jump       ; (8) Перехід до мітки jump
	mov EDX, RB          ; (9) Завантажуємо в EDX праву границю
	cmp [EBX], EDX       ; (10) Порівнюємо праву границю з елементом
	jge short jump       ; (11) Перехід до мітки
	add EBX, 4	         ; (12) Формуємо адресу наступного елемента масиву arr
	loop G1              ;(13) Декрементує CX і якщо CX не дорівнює нулю, то на G1 
	jmp G2;
jump:
    add Count, 1           ; (14) Інкрементуємо змінну, що підраховує кількість елементів, що задовільняють умову

	add EAX, [EBX]	   ; (15) Додаємо до AX поточний елемент масиву arr
	add EBX, 4	         ; (16) Формуємо адресу наступного елемента масиву arr
	loop G1              ; (17) Декрементує CX і якщо CX не дорівнює нулю, то на G1 
G2:
	mov Sum, EAX	   ; (18) Записуємо в Sum cуму елементів 
ret
sayHello ENDP
END

